# Generated by Django 4.2.7 on 2023-12-22 21:33

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccountOwner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("owner_name", models.CharField(max_length=255)),
                ("owner_email", models.EmailField(max_length=254)),
                ("owner_phone", models.CharField(max_length=20)),
                ("owner_urls", models.JSONField(null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="BotPersonality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("language", models.CharField(default="ESPAÃ‘OL", max_length=255)),
                ("communication_style", models.TextField(blank=True, null=True)),
                ("values", models.TextField(blank=True, null=True)),
                ("preferences", models.TextField(blank=True, null=True)),
                ("dislikes", models.TextField(blank=True, null=True)),
                ("example_responses", models.TextField(blank=True, null=True)),
                ("special_knowledge", models.TextField(blank=True, null=True)),
                ("cultural_references", models.TextField(blank=True, null=True)),
                ("phraseology", models.TextField(blank=True, null=True)),
                ("past_interactions", models.TextField(blank=True, null=True)),
                ("emotional_reactions", models.TextField(blank=True, null=True)),
                ("objectives", models.TextField(blank=True, null=True)),
                ("behavioral_tendencies", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Proxy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(unique=True)),
                ("port", models.PositiveIntegerField(unique=True)),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="SocialMediaAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group", models.JSONField()),
                ("account_name", models.CharField(max_length=255)),
                (
                    "access_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "access_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("other_credentials", models.JSONField(blank=True, null=True)),
                (
                    "bot_personality",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="dashboard.botpersonality",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.accountowner",
                    ),
                ),
                (
                    "proxy",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="dashboard.proxy",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SocialMediaPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("platform_name", models.TextField(blank=True, null=True, unique=True)),
                ("platform_api_url", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TaskType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_name", models.CharField(max_length=255)),
                ("creator", models.CharField(max_length=255)),
                ("descripcion", models.CharField(default="detail", max_length=255)),
                (
                    "create_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.socialmediaplatform",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskBot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bot_executor",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status_process",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("comment", models.JSONField(blank=True, null=True)),
                (
                    "start_date",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "social_media_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.socialmediaaccount",
                    ),
                ),
                (
                    "task_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.tasktype",
                    ),
                ),
            ],
        ),
    ]
